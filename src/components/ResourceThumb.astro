---
// ResourceThumb.astro
import { Icon } from 'astro-icon'
import resources from '~/data/resources.json';  

// Extracts the resource data using the provided image source
const currentResource = resources.resources.find(r => r.imageSrc === Astro.props.imgSrc);

---
<div class="thumbnail-wrapper">
    <div class="thumbnail">
       <!-- Display the resource type bar -->
       <div class={`type-bar ${currentResource?.resourceType}`}>{currentResource?.resourceType}</div>
        
        <div class="thumb-icon-wrap">
            {Astro.props.imgSrc ? (
                <div class="image-container">
                    <img src={Astro.props.imgSrc} alt="Resource thumbnail 1" />
                    {Astro.props.imgSrc2 && <img src={Astro.props.imgSrc2} alt="Resource thumbnail 2" />}
                </div>
            ) : Astro.props.icon ? (
                <Icon name={Astro.props.icon} />
            ) : (
                <Icon name="carbon:image" />
            )}
        </div>
    </div>
    <span class="code">{currentResource?.veevaCode}</span>
</div>
<style type="scss" is:global>
    .details_wrapper {
        .heading-wrapper > * {
            margin-bottom: 1rem;
        }
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        .left-col, .right-col {
            width: 100%;
        }
    }
    @media (min-width: 52em) {  /* Adjust breakpoint as needed */
        .details_wrapper {
            flex-direction: row;
            .left-col, .right-col {
                width: 50%;
            }
        }
    }
    </style>
    
<style lang="scss">
    .type-bar {
      width: 100%;
      text-align: center;
      font-weight: bold;
      padding: 0.25rem 0;
      color: var(--custom-white);
      text-transform: uppercase;
      letter-spacing: .15rem;
      font-family: var(--font-heading);
      &.internal {
        background-color: var(--theme-accent-tertiary);  
      }
      &.external {
        background-color: var(--custom-blue);  
      }
    }
    .code {
        font-size: var(--theme-text-sm);
        padding: 1em 0;
    }
    .thumbnail-wrapper {
        .thumbnail {
            // height: 400px;
            max-width: 90%;
            
            // width: 320px;
           
        }
    }
    .thumb-icon-wrap {
        background-color: var(--custom-grey-1-50);
        min-height: 15em;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        width: 100%;
        // border-radius: 28px;
        [astro-icon] {
            font-size: 3em;
            color: var(--custom-white);
        }
        .image-container {
            display: flex;
            width: 100%;
            height: 100%;
            gap: 10px;
            overflow: hidden;
        }
        img {
            background-color: var(--custom-grey-1-50);
            box-shadow: 3px 3px 6px var(--custom-grey-1-50);
            flex: 1;
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
            filter: blur(8px) grayscale(.9) opacity(.75);
        }
    }
    
</style>
