---
import announcements from '~/data/announcements.json';

const text = Astro.props.text;

const processText = (text) => {
  let segments = [text];
  for (const [announcementDate, announcementContent] of Object.entries(announcements)) {
    segments = segments.flatMap((segment) => {
      if (typeof segment === 'string') {
        const parts = segment.split(new RegExp(`\\b${announcementDate}\\b`));
        const newSegments = [];
        for (let i = 0; i < parts.length - 1; i++) {
          newSegments.push(parts[i], { announcementDate, announcementContent });
        }
        newSegments.push(parts[parts.length - 1]);
        return newSegments;
      }
      return segment;
    });
  }
  return segments;
};


const processedSegments = processText(text);
---

<div class="AnnouncementsContent">
    {processedSegments.map((segment, index) => {
      if (typeof segment === 'string') {
        return segment;
      }
      return (
        <div>
          <span class="whatsnew-date" key={index} set:html={segment.announcementDate} />
          <br/>
          <span key={index} set:html={segment.announcementContent} />
        </div>
      );
    })}
</div>

<style>
.whatsnew-date {
  color: var(--theme-text-lightest);
  /* background-color: var(--theme-bg-offset);
  padding: .15em .5em; */
  font-size: var(--theme-text-xs);
  border-radius: 3px;
  margin-bottom: .25em;
  display: inline-block;
}
</style>
